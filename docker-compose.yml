networks:
  microservices-networks:
    driver: bridge

services:
  #Chat box
  chat-box:
    build:
      context: ./ai-chatbox
      dockerfile: Dockerfile
    image: "${DOCKERHUB_USERNAME}/chat-box:latest"
    container_name: chat-box
    ports:
      - "8345:8345"
    restart: unless-stopped
    env_file:
      - local.env
    networks:
      - microservices-networks
  # Base builder image
  base-builder:
    build:
      context: .
      dockerfile: Dockerfile
    image: "${DOCKERHUB_USERNAME}/base-builder:latest"
    container_name: base-builder
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=broker:9092
    # Không cần chạy container này, chỉ build image

  # Database service
  mariadb:
    image: "${DOCKERHUB_USERNAME}/mariadb:latest"
    container_name: mariadb
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=product_service
    ports:
      - "3306:3306"
    volumes:
      - mariadb_data:/var/lib/mysql
    networks:
      - microservices-networks

  config-server:
    build:
      context: ./config-server
      dockerfile: Dockerfile
    image: "${DOCKERHUB_USERNAME}/config-server:latest"
    container_name: ${CONFIG_SERVER:-config-server}
    ports:
      - "8888:8888"
    restart: unless-stopped
    env_file:
      - local.env
    environment:
      - SPRING_PROFILES_ACTIVE=native
      - SPRING_CLOUD_CONFIG_SERVER_GIT_ENABLED=false
    networks:
      - microservices-networks

  service-registry:
    build:
      context: ./service-registry
      dockerfile: Dockerfile
    image: "${DOCKERHUB_USERNAME}/service-registry:latest"
    container_name: ${SERVICE_REGISTRY:-service-registry}
    ports:
      - "8761:8761"
    restart: unless-stopped
    env_file:
      - local.env
    networks:
      - microservices-networks

  gateway-service:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    image: "${DOCKERHUB_USERNAME}/gateway-service:latest"
    container_name: ${API_GATEWAY:-gateway-service}
    ports:
      - "8080:8080"
    restart: unless-stopped
    env_file:
      - local.env
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      service-registry:
        condition: service_started
    networks:
      - microservices-networks
  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    image: "${DOCKERHUB_USERNAME}/auth-service:latest"
    ports:
      - "9996:9996"
    restart: unless-stopped
    env_file:
      - local.env
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      service-registry:
        condition: service_started
      config-server:
        condition: service_started
      mariadb:
        condition: service_started
    networks:
      - microservices-networks
    # Service sử dụng base-builder
  product-service:
    build:
      context: .
      dockerfile: product-service/Dockerfile
    image: "${DOCKERHUB_USERNAME}/product-service:latest"
    ports:
      - "9898:9898"
    #  không tự động khởi chạy container
    restart: unless-stopped
    env_file:
      - local.env
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-registry:8761/eureka/
      - DATABASE_URL=jdbc:mariadb://mariadb:3306/product_service
    depends_on:
      service-registry:
        condition: service_started
      config-server:
        condition: service_started
      mariadb:
        condition: service_started
    networks:
      - microservices-networks
  user-service:
    build:
      context: .
      dockerfile: user-service/Dockerfile
    image: "${DOCKERHUB_USERNAME}/user-service:latest"
    ports:
      - "9995:9995"
    restart: unless-stopped
    env_file:
      - local.env
    depends_on:
      service-registry:
        condition: service_started
      config-server:
        condition: service_started
      mariadb:
        condition: service_started
    networks:
      - microservices-networks
  cart-service:
    build:
      context: .
      dockerfile: cart-service/Dockerfile
    image: "${DOCKERHUB_USERNAME}/cart-service:latest"
    ports:
      - "8088:8088"
    restart: unless-stopped
    env_file:
      - local.env
    depends_on:
      service-registry:
        condition: service_started
      config-server:
        condition: service_started
      mariadb:
        condition: service_started
    networks:
      - microservices-networks
  order-service:
    build:
      context: .
      dockerfile: order-service/Dockerfile
    image: "${DOCKERHUB_USERNAME}/order-service:latest"
    ports:
      - "9292:9292"
    restart: unless-stopped
    env_file:
      - local.env
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=broker:9092
    depends_on:
      service-registry:
        condition: service_started
      config-server:
        condition: service_started
      mariadb:
        condition: service_started
    networks:
      - microservices-networks
  payment-service:
    build:
      context: .
      dockerfile: payment-service/Dockerfile
    image: "${DOCKERHUB_USERNAME}/payment-service:latest"
    ports:
      - "9997:9997"
    restart: unless-stopped
    env_file:
      - local.env
    environment:
      - TZ=Asia/Ho_Chi_Minh
    depends_on:
      service-registry:
        condition: service_started
      config-server:
        condition: service_started
      mariadb:
        condition: service_started
    networks:
      - microservices-networks
  notification-service:
    build:
      context: .
      dockerfile: notification-service/Dockerfile
    image: "${DOCKERHUB_USERNAME}/notification-service:latest"
    ports:
      - "9003:9003"
    restart: unless-stopped
    env_file:
      - local.env
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=broker:9092
    networks:
      - microservices-networks
volumes:
  mariadb_data:

