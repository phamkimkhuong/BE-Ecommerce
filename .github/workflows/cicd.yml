name: Docker Image

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build-and-push:

      runs-on: ubuntu-latest

      steps:
          - name: Checkout code
            uses: actions/checkout@v4

          - name: Set up env
            run : |
              cat > local.env << EOF
              CLOUD_NAME=${{ secrets.CLOUD_NAME }}
              API_KEY_CLOUDINARY=${{ secrets.API_KEY_CLOUDINARY }}
              API_SECRET_KEY_CLOUDINARY=${{ secrets.API_SECRET_KEY_CLOUDINARY }}
              MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}
              MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}
              GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}
              GEMINI_API_URL=${{ secrets.GEMINI_API_URL }}
              OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
              
              # Các biến không nhạy cảm
              HOST_IP_ADDRESS=service-registry
              REDIS_HOST=redis
              CONFIG_SERVER=config-server
              SERVICE_REGISTRY=service-registry
              API_GATEWAY=api-gateway
              MARIADB=mariadb
              
              # Cấu hình database
              MARIA_DB_AUTH_SERVICE=jdbc:mariadb://mariadb:3306/auth_service?createDatabaseIfNotExist=true
              MARIA_DB_USER_SERVICE=jdbc:mariadb://mariadb:3306/user_service?createDatabaseIfNotExist=true
              MARIA_DB_PRODUCT_SERVICE=jdbc:mariadb://mariadb:3306/product_service?createDatabaseIfNotExist=true
              MARIA_DB_CART_SERVICE=jdbc:mariadb://mariadb:3306/cartdb?createDatabaseIfNotExist=true
              MARIA_DB_ORDER_SERVICE=jdbc:mariadb://mariadb:3306/order_service?createDatabaseIfNotExist=true
              MARIA_DB_PAYMENT_SERVICE=jdbc:mariadb://mariadb:3306/payment_service?createDatabaseIfNotExist=true
              
              # URL cho giao tiếp giữa các container
              CONFIG_SERVER_URL=http://config-server:8888
              SPRING_CLOUD_CONFIG_URI=http://config-server:8888
              EUREKA_SERVER_URL=http://service-registry:8761/eureka/
              GATEWAY_SERVICE_URL=http://gateway-service:8080
              
              # Cấu hình network
              NETWORK_NAME=microservices-networks
              
              DATABASE_URL=jdbc:mariadb://mariadb:3306/
              DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }}
              DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}
              
              # Port settings
              CONFIG_SERVER_PORT=8888
              SERVICE_REGISTRY_PORT=8761
              API_GATEWAY_PORT=8080
              PRODUCT_SERVICE_PORT=9898
              
              SPRING_PROFILES_ACTIVE=docker
              KAFKA_TOPIC=product-topic
              KAFKA_GROUP_ID=default-group
              KAFKA_BOOTSTRAP_SERVERS=broker:9092
              EOF

          - name: Login to Docker Hub
            uses: docker/login-action@v3
            with:
              username: ${{ secrets.DOCKERHUB_USERNAME }}
              password: ${{ secrets.DOCKERHUB_TOKEN }}

          - name: Build and Push Docker Image
            env:
              DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
            run : |
              docker compose -f docker-compose.yml build base-builder
              docker compose -f docker-compose.yml push base-builder
              docker compose -f docker-compose.yml build
              docker compose -f docker-compose.yml push

  deploy:
      needs: build-and-push
      runs-on: ubuntu-latest
      steps:
        - name: deploy
          uses: actions/checkout@v4
        - name: Execute remote SSH commands using password
          uses: appleboy/ssh-action@v1
          with:
            host: ${{ secrets.SEVER_HOST }}
            username: ${{ secrets.SEVER_USERNAME }}
            key: ${{ secrets.SEVER_KEY }}
            port: ${{ secrets.SEVER_PORT }}
            script: whoami



